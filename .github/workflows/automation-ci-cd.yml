name: Media-Automation

# This workflow is triggered on pushes and pull requests to the main branch.
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npx eslint .
    CDN-Invalidation:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Upload to S3
              uses: jakejarvis/s3-sync-action@master
              with:
                  args: --follow-symlinks --delete
              env:
                  AWS_S3_BUCKET: static-files-lambda
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESSES_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESSES_KEY }}
                  AWS_REGION: us-east-1
                  SOURCE_DIR: 'public'
                  DEST_DIR: 'public'

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESSES_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESSES_KEY }}
                  aws-region: us-east-1 # Specify your AWS region
            - name: Create CloudFront invalidation
              run: |
                  aws cloudfront create-invalidation --distribution-id E1M06P172WQ1VE --paths "/*"
    deploy-aws:
        needs: CDN-Invalidation
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Package Application
              run: zip -r archive.zip ./* -x "archive.zip" "./zip_files.sh" "./README.md" "./.*" "public/*" "model_AI/*"
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESSES_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESSES_KEY }}
                  aws-region: us-east-1 # Specify your AWS region
            - name: Update Lambda function code
              run: |
                  aws lambda update-function-code --function-name automation-media --zip-file ./archive.zip
            - name: Clean up
              run: rm -rf archive.zip
            - name: Deployed successfully
              run: echo "Deployed successfully"
